# PaiNaiDee 3D Map CI/CD Pipeline

name: Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs for validation and deployment
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Validate HTML structure
      - name: Validate HTML
        run: |
          echo "üîç Validating HTML structure..."
          # Check if index.html exists and has basic structure
          if [ -f "index.html" ]; then
            echo "‚úÖ index.html found"
            grep -q "<!DOCTYPE html>" index.html && echo "‚úÖ HTML5 DOCTYPE found" || exit 1
            grep -q "<title>" index.html && echo "‚úÖ Title tag found" || exit 1
            echo "‚úÖ HTML validation passed"
          else
            echo "‚ùå index.html not found"
            exit 1
          fi

      # Validate JavaScript syntax
      - name: Validate JavaScript
        run: |
          echo "üîç Validating JavaScript files..."
          if [ -f "script.js" ]; then
            echo "‚úÖ script.js found"
            # Basic syntax check using node
            node -c script.js && echo "‚úÖ JavaScript syntax valid" || exit 1
          else
            echo "‚ùå script.js not found"
            exit 1
          fi

      # Check CSS files
      - name: Validate CSS
        run: |
          echo "üîç Checking CSS files..."
          if [ -f "styles.css" ]; then
            echo "‚úÖ styles.css found"
            # Basic check for CSS content
            [ -s "styles.css" ] && echo "‚úÖ CSS file is not empty" || exit 1
          else
            echo "‚ùå styles.css not found"
            exit 1
          fi

      # Test application startup
      - name: Test Application Startup
        run: |
          echo "üöÄ Testing application startup..."
          # Start a simple HTTP server in background
          python3 -m http.server 8080 &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 2
          
          # Test if the application loads
          curl -s http://localhost:8080 | grep -q "PaiNaiDee 3D Map" && echo "‚úÖ Application loads successfully" || exit 1
          
          # Clean up
          kill $SERVER_PID
          echo "‚úÖ Application startup test completed"

  # Deploy job (can be extended for actual deployment)
  deploy:
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy Ready
        run: |
          echo "üöÄ Application is ready for deployment!"
          echo "üìä Project Statistics:"
          echo "   - HTML files: $(find . -name "*.html" | wc -l)"
          echo "   - CSS files: $(find . -name "*.css" | wc -l)"
          echo "   - JS files: $(find . -name "*.js" | wc -l)"
          echo "‚úÖ All checks passed - Ready to deploy PaiNaiDee 3D Map!"
